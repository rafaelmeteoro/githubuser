// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.1'
        classpath 'com.jakewharton:butterknife-gradle-plugin:8.7.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url 'https://clojars.org/repo/' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.google.com' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def GRADLE_VERSION = '2.2.1'

// Android
def SUPPORT_LIBRARY_VERSION = '26.0.1'
def CONSTRAINT_LAYOUT_VERSION = '1.0.2'
def LIFECYCLER_VERSION = '1.0.0-alpha9'
def MULTIDEX_VERSION = '1.0.1'

def RX_JAVA_VERSION = '1.2.3'
def RX_ANDROID_VERSION = '1.2.1'
def RX_LIFECYCLE_VERSION = '0.6.1'
def RX_BINDING_VERSION = '0.4.0'

def RETROFIT2_VERSION = '2.1.0'
def LOG_INTERCEPTOR_VERSION = '3.3.1'

def PARCEL_PLEASE_VERSION = '1.0.2'
def LOMBOK_VERSION = '1.16.12'
def ICE_PICK_VERSION = '3.2.0'
def BUTTERKNIFE_VERSION = '8.7.0'
def DAGGER_VERSION = '2.4'

def LEAK_CANARY_VERSION = '1.5'

def PICASSO_VERSION = '2.5.2'
def MULTI_STATE_VIEW_VERSION = '1.3.0'

// Test
def MOCKITO_VERSION = '1.10.19'
def ESPRESSO_VERSION = '2.2.2'
def RUNNER_VERSION = '0.5'
def JUNIT_VERSION = '4.12'
def JAVAX_INJECT_VERSION = '1'
def HAMCREST_VERSION = '1.3'
def NITOR_MATCHERS_VERSION = '1.3'

ext.deps = [
        gradle               : "com.android.tools.build:gradle:$GRADLE_VERSION",

        // Support Libraries
        appCompat            : "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION",
        supportV4            : "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION",
        designCompat         : "com.android.support:design:$SUPPORT_LIBRARY_VERSION",
        cardViewCompat       : "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION",
        supportAnnotations   : "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION",
        constraintLayout     : "com.android.support.constraint:constraint-layout:$CONSTRAINT_LAYOUT_VERSION",
        recyclerView         : "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION",
        supportV13           : "com.android.support:support-v13:$SUPPORT_LIBRARY_VERSION",
        lifecycleRuntime     : "android.arch.lifecycle:runtime:$LIFECYCLER_VERSION",
        lifecycleExtensions  : "android.arch.lifecycle:extensions:$LIFECYCLER_VERSION",
        lifecycleAnnotations : "android.arch.lifecycle:compiler:$LIFECYCLER_VERSION",
        multidex             : "com.android.support:multidex:$MULTIDEX_VERSION",

        // Rx Libraries
        rxJava               : "io.reactivex:rxjava:$RX_JAVA_VERSION",
        rxAndroid            : "io.reactivex:rxandroid:$RX_ANDROID_VERSION",
        rxLifeCycle          : "com.trello:rxlifecycle:$RX_LIFECYCLE_VERSION",
        rxLifeCycleComponents: "com.trello:rxlifecycle-components:$RX_LIFECYCLE_VERSION",
        rxBinding            : "com.jakewharton.rxbinding:rxbinding:$RX_BINDING_VERSION",

        // Networking Libraries
        retrofit2            : "com.squareup.retrofit2:retrofit:$RETROFIT2_VERSION",
        gsonConverter        : "com.squareup.retrofit2:converter-gson:$RETROFIT2_VERSION",
        rxJavaAdapter        : "com.squareup.retrofit2:adapter-rxjava:$RETROFIT2_VERSION",
        logInterceptor       : "com.squareup.okhttp3:logging-interceptor:$LOG_INTERCEPTOR_VERSION",

        // Model Parceler
        parcelPlease         : "com.hannesdorfmann.parcelableplease:annotation:$PARCEL_PLEASE_VERSION",
        parcelPleaseProcessor: "com.hannesdorfmann.parcelableplease:processor:$PARCEL_PLEASE_VERSION",

        // Getter / Setter Generator
        lombok               : "org.projectlombok:lombok:$LOMBOK_VERSION",

        // State Saving
        icePick              : "frankiesardo:icepick:$ICE_PICK_VERSION",
        icePickProcessor     : "frankiesardo:icepick-processor:$ICE_PICK_VERSION",

        // View and Resource Injection
        butterKnife          : "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION",
        butterKnifeCompiler  : "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION",

        // Dependency Injection
        dagger               : "com.google.dagger:dagger:$DAGGER_VERSION",
        daggerCompiler       : "com.google.dagger:dagger-compiler:$DAGGER_VERSION",

        leakCanary           : "com.squareup.leakcanary:leakcanary-android:$LEAK_CANARY_VERSION",
        leakCanaryTest       : "com.squareup.leakcanary:leakcanary-android-no-op:$LEAK_CANARY_VERSION",

        // Imaging Libraries
        picasso              : "com.squareup.picasso:picasso:$PICASSO_VERSION",

        // UI Libraries
        multiStateView       : "com.github.Kennyc1012:MultiStateView:$MULTI_STATE_VIEW_VERSION",

        // Test Libraries
        espresso             : "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION",
        runner               : "com.android.support.test:runner:$RUNNER_VERSION",
        jUnit                : "junit:junit:$JUNIT_VERSION",
        mockito              : "org.mockito:mockito-core:$MOCKITO_VERSION",
        javaxInject          : "javax.inject:javax.inject:$JAVAX_INJECT_VERSION",
        hamcrest             : "org.hamcrest:hamcrest-library:$HAMCREST_VERSION",
        hamcrestCore         : "org.hamcrest:hamcrest-core:$HAMCREST_VERSION",
        nitorMatchers        : "com.nitorcreations:matchers:$NITOR_MATCHERS_VERSION"
]